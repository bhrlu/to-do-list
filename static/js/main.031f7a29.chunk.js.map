{"version":3,"sources":["index.js"],"names":["conterId","App","useState","inputItems","setInputItems","inputValue","setInputValue","handledAddToTop","event","id","target","getAttribute","newArray","objectIndex","findIndex","obj","temp","handleAddToBottom","length","handleRemove","filter","item","handleDone","done","find","checked","complete","sort","a","b","onSubmit","preventDefault","value","type","className","onChange","e","map","onClick","ReactDOM","render","document","getElementById"],"mappings":"kMAKIA,EAAS,EACPC,EAAM,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACPC,EADO,KACKC,EADL,OAEsBF,mBAAS,IAF/B,mBAEPG,EAFO,KAEKC,EAFL,KAURC,EAAkB,SAACC,GACvB,IAAIC,GAAID,EAAME,OAAOC,aAAa,MAC9BC,EAAST,EACTU,EAAcD,EAASE,WAAU,SAAAC,GAAG,OAAEA,EAAIN,KAAMA,KACpD,GAAiB,IAAdI,EAAgB,CACjB,IAAIG,EAAKJ,EAASC,GAClBD,EAASC,GAAaD,EAASC,EAAY,GAC3CD,EAASC,EAAY,GAAGG,EACxBZ,EAAc,YAAIQ,MAKhBK,EAAoB,SAACT,GACzB,IAAIC,GAAID,EAAME,OAAOC,aAAa,MAC9BC,EAAST,EACTU,EAAcD,EAASE,WAAU,SAAAC,GAAG,OAAEA,EAAIN,KAAMA,KACpD,GAAGI,IAAcD,EAASM,OAAO,EAAE,CACjC,IAAIF,EAAKJ,EAASC,GAClBD,EAASC,GAAaD,EAASC,EAAY,GAC3CD,EAASC,EAAY,GAAGG,EACxBZ,EAAc,YAAIQ,MAGhBO,EAAe,SAACX,GACpB,IAAMC,GAAMD,EAAME,OAAOC,aAAa,MACtCP,EAAcD,EAAWiB,QAAO,SAAAC,GAAI,OAAIA,EAAKZ,KAAMA,OAE/Ca,EAAa,SAACd,GAClB,IAAMC,GAAMD,EAAME,OAAOC,aAAa,MAClCY,EAAOpB,EAAWqB,MAAK,SAAAH,GAAI,OAAGA,EAAKZ,KAAMA,MACnB,IAAvBD,EAAME,OAAOe,SACdF,EAAKG,UAAS,EACfvB,EAAWwB,MAAK,SAACC,EAAEC,GAAH,OAAOD,EAAEF,SAAWG,EAAEH,cAErCH,EAAKG,UAAS,EACdvB,EAAWwB,MAAK,SAACC,EAAEC,GAAH,OAAOD,EAAEF,SAAWG,EAAEH,aAExCtB,EAAc,YAAID,KAKpB,OACA,gCACE,sBAAM2B,SAnDe,SAACtB,GACpBA,EAAMuB,iBACN3B,EAAc,GAAD,mBAAKD,GAAL,CAAiB,CAAEM,GAAIT,IAAYgC,MAAO3B,EAAYqB,UAAS,MAC5EpB,EAAc,KAgDhB,SACE,uBAAO2B,KAAO,OACdC,UAAU,YACVF,MAAU3B,EACV8B,SAAY,SAAAC,GAAC,OAAI9B,EAAc8B,EAAE1B,OAAOsB,YAGxC,6BACG7B,EAAWkC,KAAI,SAAAhB,GAAI,OAClB,+BACE,uBAAOY,KAAK,WAAWxB,GAAIY,EAAKZ,GAAIuB,MAAOX,EAAKW,MAAOG,SAAUb,IAC/D,uBAAOY,UAAWb,EAAKK,SAAW,OAAS,UAA3C,SAAuDL,EAAKW,QAFhE,IAE+E,uBAC3E,wBAAQvB,GAAIY,EAAKZ,GAAI6B,QAAS/B,EAA9B,wBACA,wBAAQE,GAAIY,EAAKZ,GAAI6B,QAASrB,EAA9B,2BACA,wBAAQR,GAAIY,EAAKZ,GAAI6B,QAASnB,EAA9B,sBALME,EAAKZ,aAa3B8B,IAASC,OACN,cAACvC,EAAD,IACCwC,SAASC,eAAe,W","file":"static/js/main.031f7a29.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nlet conterId=0;\nconst App = () => {\n    const [inputItems, setInputItems] = useState([]);\n    const [inputValue, setInputValue] = useState(\"\");\n \n    const handleInputAdd = (event) => {\n        event.preventDefault();\n        setInputItems([...inputItems, { id: conterId++, value: inputValue, complete:false }]);\n        setInputValue(\"\");\n    }\n\n    const handledAddToTop = (event) => {\n      let id=+event.target.getAttribute(\"id\");\n      let newArray=inputItems;\n      let objectIndex = newArray.findIndex(obj=>obj.id ===id);\n      if(objectIndex!==0){\n        let temp=newArray[objectIndex];\n        newArray[objectIndex]=newArray[objectIndex-1];\n        newArray[objectIndex-1]=temp;\n        setInputItems([...newArray]);\n      }\n    // let sosan = inputItems.find(item =>item.id ===id).value;\n    // let objectIndex2 = newArray.findIndex(obj=>obj.id ===id-1);\n    }\n    const handleAddToBottom = (event)=>{\n      let id=+event.target.getAttribute(\"id\");\n      let newArray=inputItems;\n      let objectIndex = newArray.findIndex(obj=>obj.id ===id);\n      if(objectIndex!==newArray.length-1){\n        let temp=newArray[objectIndex];\n        newArray[objectIndex]=newArray[objectIndex+1];\n        newArray[objectIndex+1]=temp;\n        setInputItems([...newArray]);\n      }\n    }\n    const handleRemove = (event)=>{\n      const id = +event.target.getAttribute(\"id\");\n      setInputItems(inputItems.filter(item => item.id !==id));\n    }\n    const handleDone = (event)=>{\n      const id = +event.target.getAttribute(\"id\");\n      let done = inputItems.find(item =>item.id ===id);\n      if(event.target.checked===true){\n        done.complete=true\n       inputItems.sort((a,b)=>a.complete - b.complete)\n      }else{\n        done.complete=false;\n        inputItems.sort((a,b)=>a.complete - b.complete)\n      }\n      setInputItems([...inputItems]);\n    }\n\n\n\n    return (\n    <div >\n      <form onSubmit={handleInputAdd}>\n        <input type = \"text\"\n        className='forminput'\n        value = { inputValue }\n        onChange = {e => setInputValue(e.target.value)}\n        />\n        </form>\n        <ul>\n          {inputItems.map(item => (\n            <li  key={item.id}>\n              <input type=\"checkbox\" id={item.id} value={item.value} onChange={handleDone}  />\n                <label className={item.complete ? 'done' : 'notdone'}>{item.value}</label> <br></br>\n                <button id={item.id} onClick={handledAddToTop}>Add to top</button>\n                <button id={item.id} onClick={handleAddToBottom} >Add to bottom</button>\n                <button id={item.id} onClick={handleRemove}>Remove</button>\n            </li>))}\n        </ ul>\n\n        </div>\n    )\n};\n\nReactDOM.render(\n   <App /> ,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}